@using _5Straight.Data
@inject GameManager GameManager
@inject NavigationManager NavigationManager

<Validations @ref="GameValidations" Mode="ValidationMode.Manual">
    <Validation Validator="@ValidationRule.IsNotEmpty">
        <Field Horizontal="true">
            <FieldLabel ColumnSize="ColumnSize.Is4">Game Name</FieldLabel>
            <FieldBody ColumnSize="ColumnSize.Is8">
                <TextEdit Placeholder="Enter Game Name" @bind-Text="@GameName">
                    <Feedback>
                        <ValidationError>Enter a Game name!</ValidationError>
                    </Feedback>
                </TextEdit>
            </FieldBody>
        </Field>
    </Validation>
    <Validation Validator="@ValidateTeams">
        <Field Horizontal="true">
            <FieldLabel ColumnSize="ColumnSize.Is6">Number of Teams</FieldLabel>
            <FieldBody ColumnSize="ColumnSize.Is6">
                <Select TValue="int?">
                    <ChildContent>
                        <SelectItem Value="@((int?)null)"></SelectItem>
                        <SelectItem Value="@((int?)2)">2</SelectItem>
                        <SelectItem Value="@((int?)3)">3</SelectItem>
                    </ChildContent>
                    <Feedback>
                        <ValidationError>Select a number of Teams!</ValidationError>
                    </Feedback>
                </Select>
            </FieldBody>
        </Field>
    </Validation>
    <Validation Validator="@ValidatePlayers">
        <Field Horizontal="true">
            <FieldLabel ColumnSize="ColumnSize.Is6">Number Players on each Team</FieldLabel>
            <FieldBody ColumnSize="ColumnSize.Is6">
                <Select TValue="int?">
                    <ChildContent>
                        <SelectItem Value="@((int?)null)"></SelectItem>
                        <SelectItem Value="@((int?)1)">1</SelectItem>
                        <SelectItem Value="@((int?)2)">2</SelectItem>
                        <SelectItem Value="@((int?)3)">3</SelectItem>
                    </ChildContent>
                    <Feedback>
                        <ValidationError>Select a number of Players!</ValidationError>
                    </Feedback>
                </Select>
            </FieldBody>
        </Field>
    </Validation>
    <Field Horizontal="true" JustifyContent="JustifyContent.Start">
        <FieldBody ColumnSize="ColumnSize.Is12">
            <Button Style="float:right;" Color="Color.Primary" Clicked="@Submit">Submit</Button>
        </FieldBody>
    </Field>
</Validations>



@code {

    public string GameName { get; set; }
    public int NumberOfTeams { get; set; }
    public int NumberOfPlayersOnEachTeam { get; set; }
    public int TotalNumberOfPlayers => NumberOfTeams * NumberOfPlayersOnEachTeam;
    Validations GameValidations;


    void ValidatePlayers(ValidatorEventArgs e)
    {
        var selectedValue = e.Value == null ? 0 : Convert.ToInt32(e.Value);
        NumberOfPlayersOnEachTeam = selectedValue;
        e.Status = selectedValue != 0 ? ValidationStatus.Success : ValidationStatus.Error;
    }

    void ValidateTeams(ValidatorEventArgs e)
    {
        var selectedValue = e.Value == null ? 0 : Convert.ToInt32(e.Value);
        NumberOfTeams = selectedValue;
        e.Status = selectedValue != 0 ? ValidationStatus.Success : ValidationStatus.Error;
    }

    void Submit()
    {
        if (GameValidations.ValidateAll())
        {
            Game game = GameManager.CreateNewGame(GameName, NumberOfTeams, NumberOfPlayersOnEachTeam);
            NavigationManager.NavigateTo($"/GameBoard/{game.GameId}");
        }
    }
}

